[1] P. Emanuelsson and U. Nilsson, “A Comparative Study of Industrial Static Analysis Tools,” Electronic Notes in Theoretical Computer Science, vol. 217, pp. 5–21, Jul. 2008, doi: 10.1016/j.entcs.2008.06.039.
[2] J. Feichtner, “A Comparative Study of Misapplied Crypto in Android and iOS Applications,” Jul. 2019, pp. 96–108. doi: 10.5220/0007915300960108.
[3] A.-K. Wickert, M. Reif, M. Eichberg, A. Dodhy, and M. Mezini, “A Dataset of Parametric Cryptographic Misuses,” in 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), May 2019, pp. 96–100. doi: 10.1109/MSR.2019.00023.
[4] J. Park, H. Lee, and S. Ryu, “A Survey of Parametric Static Analysis,” ACM Comput. Surv., vol. 54, no. 7, pp. 1–37, Sep. 2022, doi: 10.1145/3464457.
[5] Y. Zhang, M. M. A. Kabir, Y. Xiao, D. Yao, and N. Meng, “Automatic Detection of Java Cryptographic API Misuses: Are We There Yet?,” IEEE Transactions on Software Engineering, vol. 49, no. 1, pp. 288–303, Jan. 2023, doi: 10.1109/TSE.2022.3150302.
[6] M. Schlichtig, A.-K. Wickert, S. Krüger, E. Bodden, and M. Mezini, “CamBench -- Cryptographic API Misuse Detection Tool Benchmark Suite.” arXiv, Apr. 13, 2022. Accessed: Feb. 26, 2023. [Online]. Available: http://arxiv.org/abs/2204.06447
[7] D. Landman, A. Serebrenik, and J. J. Vinju, “Challenges for Static Analysis of Java Reflection - Literature Review and Empirical Study,” in 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE), May 2017, pp. 507–518. doi: 10.1109/ICSE.2017.53.
[8] H. Shahriar and M. Zulkernine, “Classification of Static Analysis-Based Buffer Overflow Detectors,” in 2010 Fourth International Conference on Secure Software Integration and Reliability Improvement Companion, Jun. 2010, pp. 94–101. doi: 10.1109/SSIRI-C.2010.28.
[9] S. Krüger, K. Ali, and E. Bodden, “CogniCrypt  GEN  : generating code for the secure usage of crypto APIs,” in Proceedings of the 18th ACM/IEEE International Symposium on Code Generation and Optimization, San Diego CA USA: ACM, Feb. 2020, pp. 185–198. doi: 10.1145/3368826.3377905.
[10] L. Piccolboni, G. Di Guglielmo, L. P. Carloni, and S. Sethumadhavan, “CRYLOGGER: Detecting Crypto Misuses Dynamically,” in 2021 IEEE Symposium on Security and Privacy (SP), May 2021, pp. 1972–1989. doi: 10.1109/SP40001.2021.00010.
[11] S. Afrose, S. Rahaman, and D. Yao, “CryptoAPI-Bench: A Comprehensive Benchmark on Java Cryptographic API Misuses,” in 2019 IEEE Cybersecurity Development (SecDev), Sep. 2019, pp. 49–61. doi: 10.1109/SecDev.2019.00017.
[12] L. Zhang, J. Chen, W. Diao, S. Guo, J. Weng, and K. Zhang, “CRYPTOREX: Large-scale Analysis of Cryptographic Misuse in IoT Devices”.
[13] L. Singleton, R. Zhao, M. Song, and H. Siy, “CryptoTutor: Teaching Secure Coding Practices through Misuse Pattern Detection,” in Proceedings of the 21st Annual Conference on Information Technology Education, Virtual Event USA: ACM, Oct. 2020, pp. 403–408. doi: 10.1145/3368308.3415419.
[14] A. Choudhari, S. Guilley, and K. Karray, “CRYScanner: Finding cryptographic libraries misuse.” Accessed: Feb. 14, 2023. [Online]. Available: https://eprint.iacr.org/undefined/undefined
[15] A. Choudhari, S. Guilley, and K. Karray, “CRYScanner: Finding cryptographic libraries misuse.” Accessed: Feb. 14, 2023. [Online]. Available: https://eprint.iacr.org/undefined/undefined
[16] D. Yan, G. Xu, and A. Rountev, “Demand-driven context-sensitive alias analysis for Java”.
[17] W. Xing, Y. Cheng, and W. Dietl, “Ensuring correct cryptographic algorithm and provider usage at compile time,” in Proceedings of the 23rd ACM International Workshop on Formal Techniques for Java-like Programs, Virtual Denmark: ACM, Jul. 2021, pp. 43–50. doi: 10.1145/3464971.3468418.
[18] S. Afrose, Y. Xiao, S. Rahaman, B. Miller, and D. D. Yao, “Evaluation of Static Vulnerability Detection Tools with Java Cryptographic API Benchmarks,” IEEE Transactions on Software Engineering, pp. 1–1, 2022, doi: 10.1109/TSE.2022.3154717.
[19] V. B. Livshits and M. S. Lam, “Finding Security Vulnerabilities in Java Applications with Static Analysis”.
[20] K. Newbury, K. Ali, and A. Craik, “Hotfixing Misuses of Crypto APIs in Java Programs,” 2021.
[21] “IEEE Xplore Full-Text PDF:” https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8816792 (accessed Feb. 13, 2023).
[22] M. Hazhirpasand, M. Ghafari, and O. Nierstrasz, “Java Cryptography Uses in the Wild.” arXiv, Sep. 02, 2020. Accessed: Feb. 13, 2023. [Online]. Available: http://arxiv.org/abs/2009.01101
[23] S. Amann, S. Nadi, H. A. Nguyen, T. N. Nguyen, and M. Mezini, “MUBench: A Benchmark for API-Misuse Detectors,” in 2016 IEEE/ACM 13th Working Conference on Mining Software Repositories (MSR), May 2016, pp. 464–467.
[24] J. Gao, P. Kong, L. Li, T. F. Bissyandé, and J. Klein, “Negative Results on Mining Crypto-API Usage Rules in Android Apps,” in 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), May 2019, pp. 388–398. doi: 10.1109/MSR.2019.00065.
[25] A. Majumdar, A. Monsifrot, and C. Thomborson, “On Evaluating Obfuscatory Strength of Alias-based Transforms using Static Analysis,” in 2006 International Conference on Advanced Computing and Communications, Dec. 2006, pp. 605–610. doi: 10.1109/ADCOM.2006.4289963.
[26] N. Jovanovic, C. Kruegel, and E. Kirda, “Pixy: a static analysis tool for detecting Web application vulnerabilities,” in 2006 IEEE Symposium on Security and Privacy (S&P’06), May 2006, p. 6 pp. – 263. doi: 10.1109/SP.2006.29.
[27] A.-K. Wickert, L. Baumgärtner, F. Breitfelder, and M. Mezini, “Python Crypto Misuses in the Wild,” in Proceedings of the 15th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), Oct. 2021, pp. 1–6. doi: 10.1145/3475716.3484195.
[28] L. Li et al., “Static analysis of android apps: A systematic literature review,” Information and Software Technology, vol. 88, pp. 67–95, Aug. 2017, doi: 10.1016/j.infsof.2017.04.001.
[29] E. Bodden, “The secret sauce in efficient and precise static analysis: the beauty of distributive, summary-based static analyses (and how to master them),” in Companion Proceedings for the ISSTA/ECOOP 2018 Workshops, Amsterdam Netherlands: ACM, Jul. 2018, pp. 85–93. doi: 10.1145/3236454.3236500.
[30] A. Possemato and Y. Fratantonio, “Towards HTTPS Everywhere on Android: We Are Not There Yet”.
[31] A. Braga, R. Dahab, N. Antunes, N. Laranjeiro, and M. Vieira, “Understanding How to Use Static Analysis Tools for Detecting Cryptography Misuse in Software,” IEEE Transactions on Reliability, vol. 68, no. 4, pp. 1384–1403, Dec. 2019, doi: 10.1109/TR.2019.2937214.
[32] G. E. de P. Rodrigues, A. M. Braga, and R. Dahab, “Using Graph Embeddings and Machine Learning to Detect Cryptography Misuse in Source Code,” in 2020 19th IEEE International Conference on Machine Learning and Applications (ICMLA), Dec. 2020, pp. 1059–1066. doi: 10.1109/ICMLA51294.2020.00171.
[33] M. Oltrogge, N. Huaman, S. Amft, Y. Acar, M. Backes, and S. Fahl, “Why Eve and Mallory Still Love Android: Revisiting TLS (In)Security in Android Applications”.
